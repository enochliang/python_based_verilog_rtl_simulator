python3 ast_checker.py -f ../picorv32/ast/Vpicorv32_axi.xml
#####################################################
# Start parsing [../picorv32/ast/Vpicorv32_axi.xml] #
#####################################################
#########################################
#    Start Checking Simple Design ...   #
#########################################
[Checker Task] start checking the ast is flattened...
  - [Checker Report] warning the ast is not flattened.
--------------------------------------------------------------------------------
[Checker Task] start checking constant width notation match the value.
  - [Checker Report] Pass!
--------------------------------------------------------------------------------
[Checker Task] start checking that there are no voiddtype variable in the circuit...
  - [Checker Report] pass: no voiddtype variable in the circuit.
--------------------------------------------------------------------------------
[Checker Task] start checking that there are no <taskref> in the circuit...
  - [Checker Report] pass: no <taskref> in the circuit.
--------------------------------------------------------------------------------
[Checker Task] start checking that there are no <funcref> in the circuit...
  - [Checker Report] pass: no <funcref> in the circuit.
--------------------------------------------------------------------------------
[Checker Task] start checking no loop in the circuit...
  - [Checker Report] pass: no <while> in the circuit.
--------------------------------------------------------------------------------
[Checker Task] start checking Left Side of Assignment is not a <concat>...
  - [Checker Report] pass: All Left Values are Single <varref>
--------------------------------------------------------------------------------
[Checker Task] start checking each combinational <always> only has 1 Left-Value...
  - [Checker Report] pass: each comb <always> only has 1 left-value.
--------------------------------------------------------------------------------
[Checker Task] start Checking No Blocking Assignment in Clock Triggered Always Block...
--------------------------------------------------------------------------------
[Checker Task] start checking <initial> only has 1 <assign>.
--------------------------------------------------------------------------------
[Checker Task] start checking no parameter under assignments...
Pass: No parameter under assignments
--------------------------------------------------------------------------------
[Checker Task] start Checking Parameter are all replaced by <const>.
Pass: No Parameter in the Circuit.
--------------------------------------------------------------------------------
[Checker Task] start checking no output reg in circuit.
  - [Checker Report] Pass: no output reg.
--------------------------------------------------------------------------------
python3 ast_fsimulator.py -f ../picorv32/ast/Vpicorv32_axi_flat.xml
#########################################
#    Start Checking Simple Design ...   #
#########################################
[Checker Task] start checking the ast is flattened...
  - [Checker Report] pass!
--------------------------------------------------------------------------------
[Checker Task] start checking constant width notation match the value.
  - [Checker Report] Pass!
--------------------------------------------------------------------------------
[Checker Task] start checking that there are no voiddtype variable in the circuit...
  - [Checker Report] pass: no voiddtype variable in the circuit.
--------------------------------------------------------------------------------
[Checker Task] start checking that there are no <taskref> in the circuit...
  - [Checker Report] pass: no <taskref> in the circuit.
--------------------------------------------------------------------------------
[Checker Task] start checking that there are no <funcref> in the circuit...
  - [Checker Report] pass: no <funcref> in the circuit.
--------------------------------------------------------------------------------
[Checker Task] start checking no loop in the circuit...
  - [Checker Report] pass: no <while> in the circuit.
--------------------------------------------------------------------------------
[Checker Task] start checking Left Side of Assignment is not a <concat>...
  - [Checker Report] pass: All Left Values are Single <varref>
--------------------------------------------------------------------------------
[Checker Task] start checking each combinational <always> only has 1 Left-Value...
  - [Checker Report] pass: each comb <always> only has 1 left-value.
--------------------------------------------------------------------------------
[Checker Task] start Checking No Blocking Assignment in Clock Triggered Always Block...
--------------------------------------------------------------------------------
[Checker Task] start checking <initial> only has 1 <assign>.
--------------------------------------------------------------------------------
[Checker Task] start checking no parameter under assignments...
Pass: No parameter under assignments
--------------------------------------------------------------------------------
[Checker Task] start Checking Parameter are all replaced by <const>.
Pass: No Parameter in the Circuit.
--------------------------------------------------------------------------------
[Checker Task] start checking no output reg in circuit.
  - [Checker Report] Pass: no output reg.
--------------------------------------------------------------------------------
[AST Schedule Preprocess] start merging multi-named signals...
--------------------------------------------------------------------------------
    warning: dtype_id = 41, width = 0
[AST Schedule Preprocess] start numbering subcircuits...
  - finished. total number of subcircuit = 129
--------------------------------------------------------------------------------
finished. total scheduled subcircuit number = 129
  Dumped <new_ast_dump.xml>!
start adding <var> nodes into ast... 
Total Number of <var> = 311
Total Number of AST Nodes = 7064
Total Number of <var> in my ast = 311
Total Number of subcircuit nodes in my ast = 7064
  Dumped <new_ast_dump.xml>!
Dumped Varname Dict.
  - dumped file = ./sig_list/pysim_sig_table.json
Dumped Signal Table.
  - dumped file = ./sig_list/fsim_sig_table.json
<always loc='e,1956,2,1956,8' >
  <assign loc='e,1957,12,1957,14' >
    <const loc='e,1957,15,1957,16' value='0' next_value='x' cur_value='x'flist='{}'>
    <var name='picorv32_axi.picorv32_core.trap_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
  </assign>
  <assign loc='e,1958,10,1958,12' >
    <const loc='e,1958,13,1958,16' value='xxxxx' next_value='xxxxx' cur_value='xxxxx'flist='{}'>
    <var name='picorv32_axi.picorv32_core.reg_sh' value='00000' next_value='00000' cur_value='00001'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839}'>
  </assign>
  <assign loc='e,1959,11,1959,13' >
    <const loc='e,1959,14,1959,17' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
    <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
  </assign>
  <if loc='e,1961,4,1961,6' >
    <and loc='e,1961,31,1961,33' value='0' next_value='x' cur_value='x'flist='{('picorv32_axi.picorv32_core.genblk2.pcpi_div.pcpi_wait_reg', 'data'): 0.0, ('picorv32_axi.picorv32_core.pcpi_valid_reg', 'data'): 1.0}'>
      <and loc='e,1961,16,1961,18' value='0' next_value='x' cur_value='x'flist='{('picorv32_axi.picorv32_core.pcpi_valid_reg', 'data'): 1.0}'>
        <var name='resetn' value='1' next_value='1' cur_value='1'flist='{}'>
        <var name='pcpi_valid' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.pcpi_valid_reg', 'data'): 1.0}'>
      </and>
      <not loc='e,1961,34,1961,35' value='1' next_value='x' cur_value='x'flist='{('picorv32_axi.picorv32_core.genblk2.pcpi_div.pcpi_wait_reg', 'data'): 1.0}'>
        <var name='picorv32_axi.picorv32_core.pcpi_int_wait' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.genblk2.pcpi_div.pcpi_wait_reg', 'data'): 1.0}'>
      </not>
    </and>
    <begin >
      <if loc='e,1962,5,1962,7' >
        <redor loc='e,1962,9,1962,29' value='1' next_value='x' cur_value='x'flist='{}'>
          <var name='picorv32_axi.picorv32_core.pcpi_timeout_counter' value='1111' next_value='1111' cur_value='1111'flist='{('picorv32_axi.picorv32_core.genblk2.pcpi_div.pcpi_wait_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.pcpi_valid_reg', 'ctrl'): 1.0}'>
        </redor>
        <begin >
          <assign loc='e,1963,27,1963,29' >
            <sub loc='e,1963,51,1963,52' value='1110' next_value='xxxx' cur_value='xxxx'flist='{}'>
              <var name='picorv32_axi.picorv32_core.pcpi_timeout_counter' value='1111' next_value='1111' cur_value='1111'flist='{('picorv32_axi.picorv32_core.genblk2.pcpi_div.pcpi_wait_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.pcpi_valid_reg', 'ctrl'): 1.0}'>
              <const loc='e,1963,51,1963,52' value='0001' next_value='xxxx' cur_value='xxxx'flist='{}'>
            </sub>
            <var name='picorv32_axi.picorv32_core.pcpi_timeout_counter' value='1111' next_value='1111' cur_value='1111'flist='{('picorv32_axi.picorv32_core.genblk2.pcpi_div.pcpi_wait_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.pcpi_valid_reg', 'ctrl'): 1.0}'>
          </assign>
        </begin>
      </if>
    </begin>
    <begin >
      <assign loc='e,1966,26,1966,28' >
        <const loc='e,1966,29,1966,30' value='1111' next_value='xxxx' cur_value='xxxx'flist='{}'>
        <var name='picorv32_axi.picorv32_core.pcpi_timeout_counter' value='1111' next_value='1111' cur_value='1111'flist='{('picorv32_axi.picorv32_core.genblk2.pcpi_div.pcpi_wait_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.pcpi_valid_reg', 'ctrl'): 1.0}'>
      </assign>
    </begin>
  </if>
  <assign loc='e,1967,17,1967,19' >
    <not loc='e,1967,20,1967,21' value='0' next_value='x' cur_value='x'flist='{('picorv32_axi.picorv32_core.pcpi_timeout_counter', 'data'): 0.0625}'>
      <redor loc='e,1967,21,1967,41' value='1' next_value='x' cur_value='x'flist='{('picorv32_axi.picorv32_core.pcpi_timeout_counter', 'data'): 0.0625}'>
        <var name='picorv32_axi.picorv32_core.pcpi_timeout_counter' value='1111' next_value='1111' cur_value='1111'flist='{('picorv32_axi.picorv32_core.genblk2.pcpi_div.pcpi_wait_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.pcpi_valid_reg', 'ctrl'): 1.0}'>
      </redor>
    </not>
    <var name='picorv32_axi.picorv32_core.pcpi_timeout' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.pcpi_timeout_counter', 'data'): 0.0625}'>
  </assign>
  <if loc='e,1970,3,1970,5' >
    <redor loc='e,1970,43,1970,48' value='0' next_value='x' cur_value='x'flist='{('picorv32_axi.picorv32_core.timer', 'data'): 1.0}'>
      <var name='picorv32_axi.picorv32_core.timer' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.timer', 'stay'): 1.0, ('picorv32_axi.picorv32_core.timer', 'ctrl'): 1.0}'>
    </redor>
    <begin >
      <assign loc='e,1971,10,1971,12' >
        <sub loc='e,1971,19,1971,20' value='11111111111111111111111111111111' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
          <var name='picorv32_axi.picorv32_core.timer' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.timer', 'stay'): 1.0, ('picorv32_axi.picorv32_core.timer', 'ctrl'): 1.0}'>
          <const loc='e,1971,21,1971,22' value='00000000000000000000000000000001' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
        </sub>
        <var name='picorv32_axi.picorv32_core.timer' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.timer', 'stay'): 1.0, ('picorv32_axi.picorv32_core.timer', 'ctrl'): 1.0}'>
      </assign>
    </begin>
  </if>
  <assign loc='e,1972,14,1972,16' >
    <const loc='e,1972,17,1972,18' value='0' next_value='x' cur_value='x'flist='{}'>
    <var name='picorv32_axi.picorv32_core.do_waitirq' value='0' next_value='0' cur_value='0'flist='{}'>
  </assign>
  <assign loc='e,1973,19,1973,21' >
    <const loc='e,1973,22,1973,23' value='0' next_value='x' cur_value='x'flist='{}'>
    <var name='picorv32_axi.picorv32_core.trace_valid_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
  </assign>
  <if loc='e,1976,3,1976,5' >
    <var name='resetn' value='1' next_value='1' cur_value='1'flist='{}'>
    <begin >
      <case loc='e,1994,4,1994,8' >
        <var name='picorv32_axi.picorv32_core.cpu_state' value='00000100' next_value='00000100' cur_value='00000100'flist='{('picorv32_axi.picorv32_core.cpu_state', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
        <caseitem loc='e,1995,19,1995,20' >
          <const loc='e,1995,5,1995,19' value='10000000' next_value='xxxxxxxx' cur_value='xxxxxxxx'flist='{}'>
          <assign loc='e,1995,30,1995,32' >
            <const loc='e,1995,33,1995,34' value='1' next_value='x' cur_value='x'flist='{}'>
            <var name='picorv32_axi.picorv32_core.trap_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
          </assign>
        </caseitem>
        <caseitem loc='e,1996,20,1996,21' >
          <const loc='e,1996,5,1996,20' value='01000000' next_value='xxxxxxxx' cur_value='xxxxxxxx'flist='{}'>
          <assign loc='e,1997,19,1997,21' >
            <and loc='e,1997,39,1997,41' value='1' next_value='x' cur_value='x'flist='{}'>
              <not loc='e,1997,22,1997,23' value='1' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.decoder_trigger' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'data'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 0.0}'>
              </not>
              <not loc='e,1997,42,1997,43' value='1' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.do_waitirq' value='0' next_value='0' cur_value='0'flist='{}'>
              </not>
            </and>
            <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
          </assign>
          <assign loc='e,1998,19,1998,21' >
            <const loc='e,1998,22,1998,23' value='00' next_value='xx' cur_value='xx'flist='{}'>
            <var name='picorv32_axi.picorv32_core.mem_wordsize' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.mem_wordsize', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
          </assign>
          <case loc='e,2000,6,2000,10' >
            <const loc='e,2000,12,2000,16' value='1' next_value='x' cur_value='x'flist='{}'>
            <caseitem loc='e,2001,33,2001,34' >
              <sel loc='e,2001,30,2001,31' value='0' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.irq_state' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.irq_state', 'stay'): 1.0}'>
                <const loc='e,2001,31,2001,32' value='0' next_value='x' cur_value='x'flist='{}'>
                <const loc='e,2001,30,2001,31' value='00000000000000000000000000000001' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
              </sel>
              <assign loc='e,2002,19,2002,21' >
                <const loc='e,2002,22,2002,23' value='1' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.irq_active' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.irq_active', 'stay'): 1.0}'>
              </assign>
              <assign loc='e,2003,21,2003,23' >
                <const loc='e,2003,24,2003,25' value='1' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
              </assign>
            </caseitem>
            <caseitem loc='e,2005,33,2005,34' >
              <sel loc='e,2005,30,2005,31' value='0' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.irq_state' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.irq_state', 'stay'): 1.0}'>
                <const loc='e,2005,31,2005,32' value='1' next_value='x' cur_value='x'flist='{}'>
                <const loc='e,2005,30,2005,31' value='00000000000000000000000000000001' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
              </sel>
              <assign loc='e,2006,16,2006,18' >
                <and loc='e,2006,31,2006,32' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                  <var name='picorv32_axi.picorv32_core.irq_pending' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.irq_pending', 'data'): 1.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 1.0, ('picorv32_axi.picorv32_core.reg_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 0.0}'>
                  <not loc='e,2006,33,2006,34' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.irq_mask' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.irq_mask', 'stay'): 1.0}'>
                  </not>
                </and>
                <var name='picorv32_axi.picorv32_core.eoi_reg' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.eoi_reg', 'stay'): 1.0}'>
              </assign>
            </caseitem>
          </case>
          <if loc='e,2010,6,2010,8' >
            <var name='picorv32_axi.picorv32_core.latched_trace' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.latched_trace', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
            <begin >
              <assign loc='e,2011,23,2011,25' >
                <const loc='e,2011,26,2011,27' value='1' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.trace_valid_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
              </assign>
              <assign loc='e,2013,23,2013,25' >
                <cond loc='e,2013,72,2013,73' value='0000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                  <var name='picorv32_axi.picorv32_core.latched_branch' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.latched_branch', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                  <or loc='e,2013,72,2013,73' value='000100000000000000001100001000010100' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                    <const loc='e,2013,58,2013,70' value='000100000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                    <or loc='e,2013,56,2013,57' value='000000000000000000001100001000010100' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <cond loc='e,2013,39,2013,40' value='000000000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.irq_active' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.irq_active', 'stay'): 1.0}'>
                        <const loc='e,2013,41,2013,50' value='100000000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        <const loc='e,2013,53,2013,54' value='000000000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      </cond>
                      <and loc='e,2013,86,2013,87' value='000000000000000000001100001000010100' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        <const loc='e,2013,88,2013,100' value='000011111111111111111111111111111110' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        <extend loc='e,2013,75,2013,85' value='000000000000000000001100001000010100' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <var name='picorv32_axi.picorv32_core.current_pc' value='00000000000000001100001000010100' next_value='00000000000000001100001000010100' cur_value='00000000000000001100001000010100'flist='{('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 1.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 1.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 1.0}'>
                        </extend>
                      </and>
                    </or>
                  </or>
                  <or loc='e,2015,55,2015,56' value='0000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                    <cond loc='e,2015,38,2015,39' value='000000000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.irq_active' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.irq_active', 'stay'): 1.0}'>
                      <const loc='e,2015,40,2015,49' value='100000000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <const loc='e,2015,52,2015,53' value='000000000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                    </cond>
                    <cond loc='e,2015,72,2015,73' value='0000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.latched_stalu' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.latched_stalu', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                      <extend loc='e,2015,74,2015,83' value='0000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.alu_out_q' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.is_lui_auipc_jal_jalr_addi_add_sub', 'data'): 1.0, ('picorv32_axi.picorv32_core.is_compare', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_xor', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_xori', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_or', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_ori', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_and', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_andi', 'data'): 1.0}'>
                      </extend>
                      <extend loc='e,2015,86,2015,93' value='0000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                      </extend>
                    </cond>
                  </or>
                </cond>
                <var name='picorv32_axi.picorv32_core.trace_data_reg' value='000100000000000000001100001000010000' next_value='000100000000000000001100001000010000' cur_value='000100000000000000001100001000010000'flist='{('picorv32_axi.picorv32_core.trace_data_reg', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
              </assign>
            </begin>
          </if>
          <assign loc='e,2017,13,2017,15' >
            <var name='picorv32_axi.picorv32_core.current_pc' value='00000000000000001100001000010100' next_value='00000000000000001100001000010100' cur_value='00000000000000001100001000010100'flist='{('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 1.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 1.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 1.0}'>
            <var name='picorv32_axi.picorv32_core.reg_pc' value='00000000000000001100001000010000' next_value='00000000000000001100001000010000' cur_value='00000000000000001100001000010000'flist='{('picorv32_axi.picorv32_core.reg_pc', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
          </assign>
          <assign loc='e,2018,18,2018,20' >
            <var name='picorv32_axi.picorv32_core.current_pc' value='00000000000000001100001000010100' next_value='00000000000000001100001000010100' cur_value='00000000000000001100001000010100'flist='{('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 1.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 1.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 1.0}'>
            <var name='picorv32_axi.picorv32_core.reg_next_pc' value='00000000000000001100001000010100' next_value='00000000000000001100001000010100' cur_value='00000000000000001100001000010100'flist='{('picorv32_axi.picorv32_core.reg_next_pc', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
          </assign>
          <if loc='e,2019,6,2019,8' >
            <or loc='e,2019,106,2019,108' value='0' next_value='x' cur_value='x'flist='{}'>
              <and loc='e,2019,75,2019,77' value='0' next_value='x' cur_value='x'flist='{}'>
                <and loc='e,2019,60,2019,62' value='0' next_value='x' cur_value='x'flist='{}'>
                  <and loc='e,2019,44,2019,46' value='0' next_value='x' cur_value='x'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.decoder_trigger' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'data'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 0.0}'>
                    <not loc='e,2019,47,2019,48' value='1' next_value='x' cur_value='x'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.irq_active' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.irq_active', 'stay'): 1.0}'>
                    </not>
                  </and>
                  <not loc='e,2019,63,2019,64' value='1' next_value='x' cur_value='x'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.irq_delay' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.irq_delay', 'stay'): 1.0}'>
                  </not>
                </and>
                <redor loc='e,2019,78,2019,79' value='0' next_value='x' cur_value='x'flist='{}'>
                  <and loc='e,2019,92,2019,93' value='00000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.irq_pending' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.irq_pending', 'data'): 1.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 1.0, ('picorv32_axi.picorv32_core.reg_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 0.0}'>
                    <not loc='e,2019,94,2019,95' value='11111111111111111111111111111111' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.irq_mask' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.irq_mask', 'stay'): 1.0}'>
                    </not>
                  </and>
                </redor>
              </and>
              <redor loc='e,2019,109,2019,118' value='0' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.irq_state' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.irq_state', 'stay'): 1.0}'>
              </redor>
            </or>
            <begin >
              <assign loc='e,2020,17,2020,19' >
                <cond loc='e,2020,40,2020,41' value='xx' next_value='xx' cur_value='xx'flist='{}'>
                  <eq loc='e,2020,31,2020,33' value='x' next_value='x' cur_value='x'flist='{}'>
                    <const loc='e,2020,34,2020,39' value='00' next_value='xx' cur_value='xx'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.irq_state' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.irq_state', 'stay'): 1.0}'>
                  </eq>
                  <const loc='e,2020,42,2020,47' value='01' next_value='xx' cur_value='xx'flist='{}'>
                  <cond loc='e,2020,70,2020,71' value='xx' next_value='xx' cur_value='xx'flist='{}'>
                    <eq loc='e,2020,61,2020,63' value='x' next_value='x' cur_value='x'flist='{}'>
                      <const loc='e,2020,64,2020,69' value='01' next_value='xx' cur_value='xx'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.irq_state' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.irq_state', 'stay'): 1.0}'>
                    </eq>
                    <const loc='e,2020,72,2020,77' value='10' next_value='xx' cur_value='xx'flist='{}'>
                    <const loc='e,2020,80,2020,85' value='00' next_value='xx' cur_value='xx'flist='{}'>
                  </cond>
                </cond>
                <var name='picorv32_axi.picorv32_core.irq_state' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.irq_state', 'stay'): 1.0}'>
              </assign>
            </begin>
            <begin >
              <if loc='e,2022,11,2022,13' >
                <and loc='e,2022,63,2022,65' value='0' next_value='x' cur_value='x'flist='{}'>
                  <or loc='e,2022,47,2022,49' value='0' next_value='x' cur_value='x'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.decoder_trigger' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'data'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 0.0}'>
                    <var name='picorv32_axi.picorv32_core.do_waitirq' value='0' next_value='0' cur_value='0'flist='{}'>
                  </or>
                  <var name='picorv32_axi.picorv32_core.instr_waitirq' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_waitirq', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                </and>
                <begin >
                  <if loc='e,2023,7,2023,9' >
                    <redor loc='e,2023,11,2023,22' value='x' next_value='x' cur_value='x'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.irq_pending' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.irq_pending', 'data'): 1.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 1.0, ('picorv32_axi.picorv32_core.reg_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 0.0}'>
                    </redor>
                    <begin >
                      <assign loc='e,2024,16,2024,18' >
                        <var name='picorv32_axi.picorv32_core.irq_pending' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.irq_pending', 'data'): 1.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 1.0, ('picorv32_axi.picorv32_core.reg_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 0.0}'>
                        <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                      </assign>
                      <assign loc='e,2025,20,2025,22' >
                        <add loc='e,2025,34,2025,35' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <var name='picorv32_axi.picorv32_core.current_pc' value='00000000000000001100001000010100' next_value='00000000000000001100001000010100' cur_value='00000000000000001100001000010100'flist='{('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 1.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 1.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 1.0}'>
                          <cond loc='e,2025,54,2025,55' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                            <var name='picorv32_axi.picorv32_core.compressed_instr' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.compressed_instr', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                            <const loc='e,2025,56,2025,57' value='00000000000000000000000000000010' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                            <const loc='e,2025,60,2025,61' value='00000000000000000000000000000100' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          </cond>
                        </add>
                        <var name='picorv32_axi.picorv32_core.reg_next_pc' value='00000000000000001100001000010100' next_value='00000000000000001100001000010100' cur_value='00000000000000001100001000010100'flist='{('picorv32_axi.picorv32_core.reg_next_pc', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                      </assign>
                      <assign loc='e,2026,21,2026,23' >
                        <const loc='e,2026,24,2026,25' value='1' next_value='x' cur_value='x'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                      </assign>
                    </begin>
                    <begin >
                      <assign loc='e,2029,19,2029,21' >
                        <const loc='e,2029,22,2029,23' value='1' next_value='x' cur_value='x'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.do_waitirq' value='0' next_value='0' cur_value='0'flist='{}'>
                      </assign>
                    </begin>
                  </if>
                </begin>
                <begin >
                  <if loc='e,2031,11,2031,13' >
                    <var name='picorv32_axi.picorv32_core.decoder_trigger' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'data'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 0.0}'>
                    <begin >
                      <assign loc='e,2032,17,2032,19' >
                        <var name='picorv32_axi.picorv32_core.irq_active' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.irq_active', 'stay'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.irq_delay' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.irq_delay', 'stay'): 1.0}'>
                      </assign>
                      <assign loc='e,2033,19,2033,21' >
                        <add loc='e,2033,33,2033,34' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <var name='picorv32_axi.picorv32_core.current_pc' value='00000000000000001100001000010100' next_value='00000000000000001100001000010100' cur_value='00000000000000001100001000010100'flist='{('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 1.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 1.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 1.0}'>
                          <cond loc='e,2033,53,2033,54' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                            <var name='picorv32_axi.picorv32_core.compressed_instr' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.compressed_instr', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                            <const loc='e,2033,55,2033,56' value='00000000000000000000000000000010' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                            <const loc='e,2033,59,2033,60' value='00000000000000000000000000000100' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          </cond>
                        </add>
                        <var name='picorv32_axi.picorv32_core.reg_next_pc' value='00000000000000001100001000010100' next_value='00000000000000001100001000010100' cur_value='00000000000000001100001000010100'flist='{('picorv32_axi.picorv32_core.reg_next_pc', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                      </assign>
                      <if loc='e,2034,7,2034,9' >
                        <var name='picorv32_axi.picorv32_core.instr_jal' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_jal', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                        <begin >
                          <assign loc='e,2035,21,2035,23' >
                            <const loc='e,2035,24,2035,25' value='1' next_value='x' cur_value='x'flist='{}'>
                            <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                          </assign>
                          <assign loc='e,2036,20,2036,22' >
                            <add loc='e,2036,34,2036,35' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                              <var name='picorv32_axi.picorv32_core.current_pc' value='00000000000000001100001000010100' next_value='00000000000000001100001000010100' cur_value='00000000000000001100001000010100'flist='{('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 1.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 1.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 1.0}'>
                              <var name='picorv32_axi.picorv32_core.decoded_imm_j' value='00000000000010001101100000011110' next_value='00000000000010001101100000011110' cur_value='00000000000010001101100000011110'flist='{('picorv32_axi.picorv32_core.decoded_imm_j', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                            </add>
                            <var name='picorv32_axi.picorv32_core.reg_next_pc' value='00000000000000001100001000010100' next_value='00000000000000001100001000010100' cur_value='00000000000000001100001000010100'flist='{('picorv32_axi.picorv32_core.reg_next_pc', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                          </assign>
                        </begin>
                        <begin >
                          <assign loc='e,2039,21,2039,23' >
                            <const loc='e,2039,24,2039,25' value='0' next_value='x' cur_value='x'flist='{}'>
                            <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                          </assign>
                          <assign loc='e,2040,24,2040,26' >
                            <and loc='e,2040,39,2040,41' value='x' next_value='x' cur_value='x'flist='{}'>
                              <not loc='e,2040,27,2040,28' value='x' next_value='x' cur_value='x'flist='{}'>
                                <var name='picorv32_axi.picorv32_core.instr_jalr' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_jalr', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                              </not>
                              <not loc='e,2040,42,2040,43' value='x' next_value='x' cur_value='x'flist='{}'>
                                <var name='picorv32_axi.picorv32_core.instr_retirq' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_retirq', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                              </not>
                            </and>
                            <var name='picorv32_axi.picorv32_core.mem_do_prefetch' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.mem_do_prefetch', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                          </assign>
                        </begin>
                      </if>
                    </begin>
                  </if>
                </begin>
              </if>
            </begin>
          </if>
        </caseitem>
        <caseitem loc='e,2044,21,2044,22' >
          <const loc='e,2044,5,2044,21' value='00100000' next_value='xxxxxxxx' cur_value='xxxxxxxx'flist='{}'>
          <assign loc='e,2045,14,2045,16' >
            <const loc='e,2045,17,2045,20' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
            <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
          </assign>
          <assign loc='e,2046,14,2046,16' >
            <const loc='e,2046,17,2046,20' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
            <var name='picorv32_axi.picorv32_core.reg_op2' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
          </assign>
          <case loc='e,2048,6,2048,10' >
            <const loc='e,2048,12,2048,16' value='1' next_value='x' cur_value='x'flist='{}'>
            <caseitem loc='e,2049,49,2049,50' >
              <var name='picorv32_axi.picorv32_core.instr_trap' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_waitirq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_timer', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_maskirq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_retirq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_setq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_getq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_fence', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_rdinstrh', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_rdinstr', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_rdcycleh', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_rdcycle', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_and', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_or', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sra', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_srl', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_xor', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sltu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_slt', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sll', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sub', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_add', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_srai', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_andi', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_ori', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_xori', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sltiu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_slti', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_addi', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sw', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sh', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sb', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lhu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lbu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lw', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lh', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lb', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_bgeu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_bltu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_bge', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_blt', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_bne', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_beq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_jalr', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_jal', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_auipc', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lui', 'data'): 0.0}'>
              <assign loc='e,2051,17,2051,19' >
                <var name='picorv32_axi.picorv32_core.cpuregs_rs1' value='10000111100110000000000000000000' next_value='10000111100110000000000000000000' cur_value='10000111100110000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[17]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs1', 'data'): 0.015625}'>
                <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
              </assign>
              <assign loc='e,2053,25,2053,27' >
                <const loc='e,2053,28,2053,29' value='1' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.pcpi_valid_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.pcpi_valid_reg', 'stay'): 1.0}'>
              </assign>
              <assign loc='e,2054,17,2054,19' >
                <sel loc='e,2054,20,2054,31' value='xxxxx' next_value='xxxxx' cur_value='xxxxx'flist='{}'>
                  <var name='picorv32_axi.picorv32_core.cpuregs_rs2' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[31]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs2', 'data'): 0.03125}'>
                  <const loc='e,2054,20,2054,31' value='00000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                  <const loc='e,2054,20,2054,31' value='00000000000000000000000000000101' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                </sel>
                <var name='picorv32_axi.picorv32_core.reg_sh' value='00000' next_value='00000' cur_value='00001'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839}'>
              </assign>
              <assign loc='e,2055,18,2055,20' >
                <var name='picorv32_axi.picorv32_core.cpuregs_rs2' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[31]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs2', 'data'): 0.03125}'>
                <var name='picorv32_axi.picorv32_core.reg_op2' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
              </assign>
              <if loc='e,2056,10,2056,12' >
                <var name='picorv32_axi.picorv32_core.pcpi_int_ready' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.genblk1.pcpi_mul.active', 'data'): 1.0, ('picorv32_axi.picorv32_core.genblk2.pcpi_div.pcpi_ready_reg', 'data'): 1.0}'>
                <begin >
                  <assign loc='e,2057,24,2057,26' >
                    <const loc='e,2057,27,2057,28' value='1' next_value='x' cur_value='x'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                  </assign>
                  <assign loc='e,2058,26,2058,28' >
                    <const loc='e,2058,29,2058,30' value='0' next_value='x' cur_value='x'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.pcpi_valid_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.pcpi_valid_reg', 'stay'): 1.0}'>
                  </assign>
                  <assign loc='e,2059,19,2059,21' >
                    <var name='picorv32_axi.picorv32_core.pcpi_int_rd' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.genblk1.pcpi_mul.active', 'data'): 1.0, ('picorv32_axi.picorv32_core.genblk2.pcpi_div.pcpi_ready_reg', 'data'): 1.0}'>
                    <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                  </assign>
                </begin>
                <begin >
                  <if loc='e,2061,15,2061,17' >
                    <or loc='e,2061,50,2061,52' value='x' next_value='x' cur_value='x'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.pcpi_timeout' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.pcpi_timeout_counter', 'data'): 0.0625}'>
                      <var name='picorv32_axi.picorv32_core.instr_ecall_ebreak' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_ecall_ebreak', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                    </or>
                    <begin >
                      <assign loc='e,2062,26,2062,28' >
                        <const loc='e,2062,29,2062,30' value='0' next_value='x' cur_value='x'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.pcpi_valid_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.pcpi_valid_reg', 'stay'): 1.0}'>
                      </assign>
                    </begin>
                  </if>
                </begin>
              </if>
            </caseitem>
            <caseitem loc='e,2066,62,2066,63' >
              <var name='picorv32_axi.picorv32_core.is_rdcycle_rdcycleh_rdinstr_rdinstrh' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_rdinstrh', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_rdinstr', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_rdcycleh', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_rdcycle', 'data'): 1.0}'>
              <case loc='e,2068,8,2068,12' >
                <const loc='e,2068,14,2068,18' value='1' next_value='x' cur_value='x'flist='{}'>
                <caseitem loc='e,2069,22,2069,23' >
                  <var name='picorv32_axi.picorv32_core.instr_rdcycle' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_rdcycle', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                  <assign loc='e,2069,32,2069,34' >
                    <sel loc='e,2069,46,2069,47' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.count_cycle' value='0000000000000000000000000000000000000000000001001001001111100101' next_value='0000000000000000000000000000000000000000000001001001001111100101' cur_value='0000000000000000000000000000000000000000000001001001001111100100'flist='{('picorv32_axi.picorv32_core.count_cycle', 'data'): 1.0}'>
                      <const loc='e,2069,50,2069,51' value='000000' next_value='xxxxxx' cur_value='xxxxxx'flist='{}'>
                      <const loc='e,2069,47,2069,49' value='00000000000000000000000000100000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                    </sel>
                    <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                  </assign>
                </caseitem>
                <caseitem loc='e,2070,44,2070,45' >
                  <var name='picorv32_axi.picorv32_core.instr_rdcycleh' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_rdcycleh', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                  <assign loc='e,2070,54,2070,56' >
                    <sel loc='e,2070,68,2070,69' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.count_cycle' value='0000000000000000000000000000000000000000000001001001001111100101' next_value='0000000000000000000000000000000000000000000001001001001111100101' cur_value='0000000000000000000000000000000000000000000001001001001111100100'flist='{('picorv32_axi.picorv32_core.count_cycle', 'data'): 1.0}'>
                      <const loc='e,2070,72,2070,74' value='100000' next_value='xxxxxx' cur_value='xxxxxx'flist='{}'>
                      <const loc='e,2070,69,2070,71' value='00000000000000000000000000100000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                    </sel>
                    <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                  </assign>
                </caseitem>
                <caseitem loc='e,2071,22,2071,23' >
                  <var name='picorv32_axi.picorv32_core.instr_rdinstr' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_rdinstr', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                  <assign loc='e,2071,32,2071,34' >
                    <sel loc='e,2071,46,2071,47' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.count_instr' value='0000000000000000000000000000000000000000000000010000101101010101' next_value='0000000000000000000000000000000000000000000000010000101101010101' cur_value='0000000000000000000000000000000000000000000000010000101101010101'flist='{('picorv32_axi.picorv32_core.count_instr', 'stay'): 1.0}'>
                      <const loc='e,2071,50,2071,51' value='000000' next_value='xxxxxx' cur_value='xxxxxx'flist='{}'>
                      <const loc='e,2071,47,2071,49' value='00000000000000000000000000100000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                    </sel>
                    <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                  </assign>
                </caseitem>
                <caseitem loc='e,2072,44,2072,45' >
                  <var name='picorv32_axi.picorv32_core.instr_rdinstrh' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_rdinstrh', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                  <assign loc='e,2072,54,2072,56' >
                    <sel loc='e,2072,68,2072,69' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.count_instr' value='0000000000000000000000000000000000000000000000010000101101010101' next_value='0000000000000000000000000000000000000000000000010000101101010101' cur_value='0000000000000000000000000000000000000000000000010000101101010101'flist='{('picorv32_axi.picorv32_core.count_instr', 'stay'): 1.0}'>
                      <const loc='e,2072,72,2072,74' value='100000' next_value='xxxxxx' cur_value='xxxxxx'flist='{}'>
                      <const loc='e,2072,69,2072,71' value='00000000000000000000000000100000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                    </sel>
                    <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                  </assign>
                </caseitem>
              </case>
            </caseitem>
            <caseitem loc='e,2075,23,2075,24' >
              <var name='picorv32_axi.picorv32_core.is_lui_auipc_jal' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_jal', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_auipc', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_lui', 'data'): 1.0}'>
              <assign loc='e,2076,16,2076,18' >
                <cond loc='e,2076,30,2076,31' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                  <var name='picorv32_axi.picorv32_core.instr_lui' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_lui', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                  <const loc='e,2076,32,2076,33' value='00000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                  <var name='picorv32_axi.picorv32_core.reg_pc' value='00000000000000001100001000010000' next_value='00000000000000001100001000010000' cur_value='00000000000000001100001000010000'flist='{('picorv32_axi.picorv32_core.reg_pc', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                </cond>
                <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
              </assign>
              <assign loc='e,2077,16,2077,18' >
                <var name='picorv32_axi.picorv32_core.decoded_imm' value='00000000000000000000000000011111' next_value='00000000000000000000000000011111' cur_value='00000000000000000000000000011111'flist='{('picorv32_axi.picorv32_core.decoded_imm', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                <var name='picorv32_axi.picorv32_core.reg_op2' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
              </assign>
              <assign loc='e,2079,22,2079,24' >
                <var name='picorv32_axi.picorv32_core.mem_do_prefetch' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.mem_do_prefetch', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
              </assign>
            </caseitem>
            <caseitem loc='e,2081,53,2081,54' >
              <var name='picorv32_axi.picorv32_core.instr_getq' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_getq', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
              <assign loc='e,2082,16,2082,18' >
                <var name='picorv32_axi.picorv32_core.cpuregs_rs1' value='10000111100110000000000000000000' next_value='10000111100110000000000000000000' cur_value='10000111100110000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[17]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs1', 'data'): 0.015625}'>
                <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
              </assign>
            </caseitem>
            <caseitem loc='e,2084,53,2084,54' >
              <var name='picorv32_axi.picorv32_core.instr_setq' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_setq', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
              <assign loc='e,2085,16,2085,18' >
                <var name='picorv32_axi.picorv32_core.cpuregs_rs1' value='10000111100110000000000000000000' next_value='10000111100110000000000000000000' cur_value='10000111100110000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[17]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs1', 'data'): 0.015625}'>
                <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
              </assign>
            </caseitem>
            <caseitem loc='e,2087,33,2087,34' >
              <var name='picorv32_axi.picorv32_core.instr_retirq' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_retirq', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
              <assign loc='e,2088,16,2088,18' >
                <const loc='e,2088,19,2088,20' value='00000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                <var name='picorv32_axi.picorv32_core.eoi_reg' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.eoi_reg', 'stay'): 1.0}'>
              </assign>
              <assign loc='e,2089,19,2089,21' >
                <const loc='e,2089,22,2089,23' value='0' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.irq_active' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.irq_active', 'stay'): 1.0}'>
              </assign>
              <assign loc='e,2090,16,2090,18' >
                <and loc='e,2090,49,2090,50' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                  <const loc='e,2090,51,2090,63' value='11111111111111111111111111111110' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                  <var name='picorv32_axi.picorv32_core.cpuregs_rs1' value='10000111100110000000000000000000' next_value='10000111100110000000000000000000' cur_value='10000111100110000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[17]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs1', 'data'): 0.015625}'>
                </and>
                <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
              </assign>
            </caseitem>
            <caseitem loc='e,2092,34,2092,35' >
              <var name='picorv32_axi.picorv32_core.instr_maskirq' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_maskirq', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
              <assign loc='e,2093,16,2093,18' >
                <var name='picorv32_axi.picorv32_core.irq_mask' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.irq_mask', 'stay'): 1.0}'>
                <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
              </assign>
              <assign loc='e,2094,17,2094,19' >
                <var name='picorv32_axi.picorv32_core.cpuregs_rs1' value='10000111100110000000000000000000' next_value='10000111100110000000000000000000' cur_value='10000111100110000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[17]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs1', 'data'): 0.015625}'>
                <var name='picorv32_axi.picorv32_core.irq_mask' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.irq_mask', 'stay'): 1.0}'>
              </assign>
            </caseitem>
            <caseitem loc='e,2096,54,2096,55' >
              <var name='picorv32_axi.picorv32_core.instr_timer' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_timer', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
              <assign loc='e,2097,16,2097,18' >
                <var name='picorv32_axi.picorv32_core.timer' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.timer', 'stay'): 1.0, ('picorv32_axi.picorv32_core.timer', 'ctrl'): 1.0}'>
                <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
              </assign>
              <assign loc='e,2098,14,2098,16' >
                <var name='picorv32_axi.picorv32_core.cpuregs_rs1' value='10000111100110000000000000000000' next_value='10000111100110000000000000000000' cur_value='10000111100110000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[17]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs1', 'data'): 0.015625}'>
                <var name='picorv32_axi.picorv32_core.timer' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.timer', 'stay'): 1.0, ('picorv32_axi.picorv32_core.timer', 'ctrl'): 1.0}'>
              </assign>
            </caseitem>
            <caseitem loc='e,2100,41,2100,42' >
              <and loc='e,2100,27,2100,29' value='0' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.is_lb_lh_lw_lbu_lhu' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.is_lb_lh_lw_lbu_lhu', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                <not loc='e,2100,30,2100,31' value='1' next_value='x' cur_value='x'flist='{}'>
                  <var name='picorv32_axi.picorv32_core.instr_trap' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_waitirq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_timer', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_maskirq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_retirq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_setq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_getq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_fence', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_rdinstrh', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_rdinstr', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_rdcycleh', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_rdcycle', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_and', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_or', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sra', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_srl', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_xor', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sltu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_slt', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sll', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sub', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_add', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_srai', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_andi', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_ori', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_xori', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sltiu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_slti', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_addi', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sw', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sh', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sb', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lhu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lbu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lw', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lh', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lb', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_bgeu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_bltu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_bge', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_blt', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_bne', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_beq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_jalr', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_jal', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_auipc', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lui', 'data'): 0.0}'>
                </not>
              </and>
              <assign loc='e,2101,16,2101,18' >
                <var name='picorv32_axi.picorv32_core.cpuregs_rs1' value='10000111100110000000000000000000' next_value='10000111100110000000000000000000' cur_value='10000111100110000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[17]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs1', 'data'): 0.015625}'>
                <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
              </assign>
              <assign loc='e,2102,21,2102,23' >
                <const loc='e,2102,24,2102,25' value='1' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
              </assign>
            </caseitem>
            <caseitem loc='e,2104,43,2104,44' >
              <var name='picorv32_axi.picorv32_core.is_slli_srli_srai' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.is_slli_srli_srai', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
              <assign loc='e,2105,16,2105,18' >
                <var name='picorv32_axi.picorv32_core.cpuregs_rs1' value='10000111100110000000000000000000' next_value='10000111100110000000000000000000' cur_value='10000111100110000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[17]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs1', 'data'): 0.015625}'>
                <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
              </assign>
              <assign loc='e,2106,15,2106,17' >
                <var name='picorv32_axi.picorv32_core.decoded_rs2' value='11111' next_value='11111' cur_value='11111'flist='{('picorv32_axi.picorv32_core.decoded_rs2', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                <var name='picorv32_axi.picorv32_core.reg_sh' value='00000' next_value='00000' cur_value='00001'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839}'>
              </assign>
            </caseitem>
            <caseitem loc='e,2108,81,2108,82' >
              <var name='picorv32_axi.picorv32_core.is_jalr_addi_slti_sltiu_xori_ori_andi' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.is_jalr_addi_slti_sltiu_xori_ori_andi', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
              <const loc='e,2108,64,2108,66' value='0' next_value='x' cur_value='x'flist='{}'>
              <assign loc='e,2109,16,2109,18' >
                <var name='picorv32_axi.picorv32_core.cpuregs_rs1' value='10000111100110000000000000000000' next_value='10000111100110000000000000000000' cur_value='10000111100110000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[17]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs1', 'data'): 0.015625}'>
                <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
              </assign>
              <assign loc='e,2110,16,2110,18' >
                <var name='picorv32_axi.picorv32_core.decoded_imm' value='00000000000000000000000000011111' next_value='00000000000000000000000000011111' cur_value='00000000000000000000000000011111'flist='{('picorv32_axi.picorv32_core.decoded_imm', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                <var name='picorv32_axi.picorv32_core.reg_op2' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
              </assign>
              <assign loc='e,2112,22,2112,24' >
                <var name='picorv32_axi.picorv32_core.mem_do_prefetch' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.mem_do_prefetch', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
              </assign>
            </caseitem>
            <caseitem loc='e,2114,7,2114,14' >
              <assign loc='e,2115,16,2115,18' >
                <var name='picorv32_axi.picorv32_core.cpuregs_rs1' value='10000111100110000000000000000000' next_value='10000111100110000000000000000000' cur_value='10000111100110000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[17]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs1', 'data'): 0.015625}'>
                <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
              </assign>
              <assign loc='e,2117,16,2117,18' >
                <sel loc='e,2117,19,2117,30' value='xxxxx' next_value='xxxxx' cur_value='xxxxx'flist='{}'>
                  <var name='picorv32_axi.picorv32_core.cpuregs_rs2' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[31]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs2', 'data'): 0.03125}'>
                  <const loc='e,2117,19,2117,30' value='00000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                  <const loc='e,2117,19,2117,30' value='00000000000000000000000000000101' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                </sel>
                <var name='picorv32_axi.picorv32_core.reg_sh' value='00000' next_value='00000' cur_value='00001'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839}'>
              </assign>
              <assign loc='e,2118,17,2118,19' >
                <var name='picorv32_axi.picorv32_core.cpuregs_rs2' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[31]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs2', 'data'): 0.03125}'>
                <var name='picorv32_axi.picorv32_core.reg_op2' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
              </assign>
              <case loc='e,2120,9,2120,13' >
                <const loc='e,2120,15,2120,19' value='1' next_value='x' cur_value='x'flist='{}'>
                <caseitem loc='e,2121,21,2121,22' >
                  <var name='picorv32_axi.picorv32_core.is_sb_sh_sw' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.is_sb_sh_sw', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                  <assign loc='e,2122,24,2122,26' >
                    <const loc='e,2122,27,2122,28' value='1' next_value='x' cur_value='x'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                  </assign>
                </caseitem>
                <caseitem loc='e,2124,43,2124,44' >
                  <var name='picorv32_axi.picorv32_core.is_sll_srl_sra' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.is_sll_srl_sra', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                </caseitem>
                <caseitem loc='e,2125,10,2125,17' >
                  <assign loc='e,2127,25,2127,27' >
                    <var name='picorv32_axi.picorv32_core.mem_do_prefetch' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.mem_do_prefetch', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                    <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                  </assign>
                </caseitem>
              </case>
            </caseitem>
          </case>
        </caseitem>
        <caseitem loc='e,2134,21,2134,22' >
          <const loc='e,2134,5,2134,21' value='00010000' next_value='xxxxxxxx' cur_value='xxxxxxxx'flist='{}'>
          <assign loc='e,2135,13,2135,15' >
            <sel loc='e,2135,16,2135,27' value='00000' next_value='xxxxx' cur_value='xxxxx'flist='{}'>
              <var name='picorv32_axi.picorv32_core.cpuregs_rs2' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[31]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs2', 'data'): 0.03125}'>
              <const loc='e,2135,16,2135,27' value='00000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
              <const loc='e,2135,16,2135,27' value='00000000000000000000000000000101' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
            </sel>
            <var name='picorv32_axi.picorv32_core.reg_sh' value='00000' next_value='00000' cur_value='00001'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839}'>
          </assign>
          <assign loc='e,2136,14,2136,16' >
            <var name='picorv32_axi.picorv32_core.cpuregs_rs2' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.cpuregs[31]', 'data'): 1.0, ('picorv32_axi.picorv32_core.decoded_rs2', 'data'): 0.03125}'>
            <var name='picorv32_axi.picorv32_core.reg_op2' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
          </assign>
          <case loc='e,2138,6,2138,10' >
            <const loc='e,2138,12,2138,16' value='1' next_value='x' cur_value='x'flist='{}'>
            <caseitem loc='e,2139,30,2139,31' >
              <var name='picorv32_axi.picorv32_core.instr_trap' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_waitirq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_timer', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_maskirq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_retirq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_setq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_getq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_fence', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_rdinstrh', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_rdinstr', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_rdcycleh', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_rdcycle', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_and', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_or', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sra', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_srl', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_xor', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sltu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_slt', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sll', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sub', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_add', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_srai', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_andi', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_ori', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_xori', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sltiu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_slti', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_addi', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sw', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sh', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_sb', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lhu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lbu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lw', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lh', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lb', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_bgeu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_bltu', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_bge', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_blt', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_bne', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_beq', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_jalr', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_jal', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_auipc', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_lui', 'data'): 0.0}'>
              <assign loc='e,2140,23,2140,25' >
                <const loc='e,2140,26,2140,27' value='1' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.pcpi_valid_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.pcpi_valid_reg', 'stay'): 1.0}'>
              </assign>
              <if loc='e,2141,8,2141,10' >
                <var name='picorv32_axi.picorv32_core.pcpi_int_ready' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.genblk1.pcpi_mul.active', 'data'): 1.0, ('picorv32_axi.picorv32_core.genblk2.pcpi_div.pcpi_ready_reg', 'data'): 1.0}'>
                <begin >
                  <assign loc='e,2142,22,2142,24' >
                    <const loc='e,2142,25,2142,26' value='1' next_value='x' cur_value='x'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                  </assign>
                  <assign loc='e,2143,24,2143,26' >
                    <const loc='e,2143,27,2143,28' value='0' next_value='x' cur_value='x'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.pcpi_valid_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.pcpi_valid_reg', 'stay'): 1.0}'>
                  </assign>
                  <assign loc='e,2144,17,2144,19' >
                    <var name='picorv32_axi.picorv32_core.pcpi_int_rd' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.genblk1.pcpi_mul.active', 'data'): 1.0, ('picorv32_axi.picorv32_core.genblk2.pcpi_div.pcpi_ready_reg', 'data'): 1.0}'>
                    <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                  </assign>
                </begin>
                <begin >
                  <if loc='e,2146,13,2146,15' >
                    <or loc='e,2146,48,2146,50' value='x' next_value='x' cur_value='x'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.pcpi_timeout' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.pcpi_timeout_counter', 'data'): 0.0625}'>
                      <var name='picorv32_axi.picorv32_core.instr_ecall_ebreak' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_ecall_ebreak', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                    </or>
                    <begin >
                      <assign loc='e,2147,24,2147,26' >
                        <const loc='e,2147,27,2147,28' value='0' next_value='x' cur_value='x'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.pcpi_valid_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.pcpi_valid_reg', 'stay'): 1.0}'>
                      </assign>
                    </begin>
                  </if>
                </begin>
              </if>
            </caseitem>
            <caseitem loc='e,2150,18,2150,19' >
              <var name='picorv32_axi.picorv32_core.is_sb_sh_sw' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.is_sb_sh_sw', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
              <assign loc='e,2151,21,2151,23' >
                <const loc='e,2151,24,2151,25' value='1' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
              </assign>
            </caseitem>
            <caseitem loc='e,2153,40,2153,41' >
              <var name='picorv32_axi.picorv32_core.is_sll_srl_sra' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.is_sll_srl_sra', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
            </caseitem>
            <caseitem loc='e,2154,7,2154,14' >
              <assign loc='e,2156,22,2156,24' >
                <var name='picorv32_axi.picorv32_core.mem_do_prefetch' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.mem_do_prefetch', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
              </assign>
            </caseitem>
          </case>
        </caseitem>
        <caseitem loc='e,2160,19,2160,20' >
          <const loc='e,2160,5,2160,19' value='00001000' next_value='xxxxxxxx' cur_value='xxxxxxxx'flist='{}'>
          <assign loc='e,2161,14,2161,16' >
            <add loc='e,2161,24,2161,25' value='00000000000000001100001000101111' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
              <var name='picorv32_axi.picorv32_core.reg_pc' value='00000000000000001100001000010000' next_value='00000000000000001100001000010000' cur_value='00000000000000001100001000010000'flist='{('picorv32_axi.picorv32_core.reg_pc', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
              <var name='picorv32_axi.picorv32_core.decoded_imm' value='00000000000000000000000000011111' next_value='00000000000000000000000000011111' cur_value='00000000000000000000000000011111'flist='{('picorv32_axi.picorv32_core.decoded_imm', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
            </add>
            <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
          </assign>
        </caseitem>
        <caseitem loc='e,2166,20,2166,21' >
          <const loc='e,2166,5,2166,20' value='00000100' next_value='xxxxxxxx' cur_value='xxxxxxxx'flist='{}'>
          <if loc='e,2167,6,2167,8' >
            <eq loc='e,2167,17,2167,19' value='0' next_value='x' cur_value='x'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 0.2}'>
              <const loc='e,2167,20,2167,21' value='00000' next_value='xxxxx' cur_value='xxxxx'flist='{}'>
              <var name='picorv32_axi.picorv32_core.reg_sh' value='00000' next_value='00000' cur_value='00001'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839}'>
            </eq>
            <begin >
              <assign loc='e,2168,15,2168,17' >
                <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
              </assign>
              <assign loc='e,2169,20,2169,22' >
                <var name='picorv32_axi.picorv32_core.mem_do_prefetch' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.mem_do_prefetch', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
              </assign>
            </begin>
            <begin >
              <if loc='e,2171,11,2171,13' >
                <lte loc='e,2171,42,2171,44' value='0' next_value='x' cur_value='x'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 0.8709677419354839}'>
                  <const loc='e,2171,45,2171,46' value='00100' next_value='xxxxx' cur_value='xxxxx'flist='{}'>
                  <var name='picorv32_axi.picorv32_core.reg_sh' value='00000' next_value='00000' cur_value='00001'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839}'>
                </lte>
                <begin >
                  <case loc='e,2173,7,2173,11' >
                    <const loc='e,2173,13,2173,17' value='1' next_value='x' cur_value='x'flist='{}'>
                    <caseitem loc='e,2174,31,2174,32' >
                      <or loc='e,2174,19,2174,21' value='0' next_value='x' cur_value='x'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.instr_slli' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_slli', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.instr_sll' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_sll', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                      </or>
                      <assign loc='e,2174,41,2174,43' >
                        <shiftl loc='e,2174,52,2174,54' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                          <const loc='e,2174,55,2174,56' value='00000000000000000000000000000100' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        </shiftl>
                        <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                      </assign>
                    </caseitem>
                    <caseitem loc='e,2175,31,2175,32' >
                      <or loc='e,2175,19,2175,21' value='1' next_value='x' cur_value='x'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.instr_srli' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.instr_srli', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.instr_srl' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_srl', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                      </or>
                      <assign loc='e,2175,41,2175,43' >
                        <shiftr loc='e,2175,52,2175,54' value='00000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                          <const loc='e,2175,55,2175,56' value='00000000000000000000000000000100' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        </shiftr>
                        <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                      </assign>
                    </caseitem>
                    <caseitem loc='e,2176,31,2176,32' >
                      <or loc='e,2176,19,2176,21' value='0' next_value='x' cur_value='x'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.instr_srai' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_srai', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.instr_sra' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_sra', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                      </or>
                      <assign loc='e,2176,41,2176,43' >
                        <shiftrs loc='e,2176,61,2176,64' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                          <const loc='e,2176,65,2176,66' value='00000000000000000000000000000100' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        </shiftrs>
                        <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                      </assign>
                    </caseitem>
                  </case>
                  <assign loc='e,2178,14,2178,16' >
                    <sub loc='e,2178,24,2178,25' value='11101' next_value='xxxxx' cur_value='xxxxx'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.reg_sh' value='00000' next_value='00000' cur_value='00001'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839}'>
                      <const loc='e,2178,24,2178,25' value='00100' next_value='xxxxx' cur_value='xxxxx'flist='{}'>
                    </sub>
                    <var name='picorv32_axi.picorv32_core.reg_sh' value='00000' next_value='00000' cur_value='00001'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839}'>
                  </assign>
                </begin>
                <begin >
                  <case loc='e,2182,7,2182,11' >
                    <const loc='e,2182,13,2182,17' value='1' next_value='x' cur_value='x'flist='{}'>
                    <caseitem loc='e,2183,31,2183,32' >
                      <or loc='e,2183,19,2183,21' value='0' next_value='x' cur_value='x'flist='{('picorv32_axi.picorv32_core.instr_sll', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'data'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.instr_slli' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_slli', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.instr_sll' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_sll', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                      </or>
                      <assign loc='e,2183,41,2183,43' >
                        <shiftl loc='e,2183,52,2183,54' value='00000000000000000000000000000100' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                          <const loc='e,2183,55,2183,56' value='00000000000000000000000000000001' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        </shiftl>
                        <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                      </assign>
                    </caseitem>
                    <caseitem loc='e,2184,31,2184,32' >
                      <or loc='e,2184,19,2184,21' value='1' next_value='x' cur_value='x'flist='{('picorv32_axi.picorv32_core.instr_srl', 'data'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'data'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.instr_srli' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.instr_srli', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.instr_srl' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_srl', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                      </or>
                      <assign loc='e,2184,41,2184,43' >
                        <shiftr loc='e,2184,52,2184,54' value='00000000000000000000000000000001' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875}'>
                          <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                          <const loc='e,2184,55,2184,56' value='00000000000000000000000000000001' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        </shiftr>
                        <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                      </assign>
                    </caseitem>
                    <caseitem loc='e,2185,31,2185,32' >
                      <or loc='e,2185,19,2185,21' value='0' next_value='x' cur_value='x'flist='{('picorv32_axi.picorv32_core.instr_sra', 'data'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'data'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.instr_srai' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_srai', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.instr_sra' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_sra', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                      </or>
                      <assign loc='e,2185,41,2185,43' >
                        <shiftrs loc='e,2185,61,2185,64' value='00000000000000000000000000000001' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                          <const loc='e,2185,65,2185,66' value='00000000000000000000000000000001' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        </shiftrs>
                        <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                      </assign>
                    </caseitem>
                  </case>
                  <assign loc='e,2187,14,2187,16' >
                    <sub loc='e,2187,24,2187,25' value='00000' next_value='xxxxx' cur_value='xxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 1.0}'>
                      <var name='picorv32_axi.picorv32_core.reg_sh' value='00000' next_value='00000' cur_value='00001'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839}'>
                      <const loc='e,2187,24,2187,25' value='00001' next_value='xxxxx' cur_value='xxxxx'flist='{}'>
                    </sub>
                    <var name='picorv32_axi.picorv32_core.reg_sh' value='00000' next_value='00000' cur_value='00001'flist='{('picorv32_axi.picorv32_core.reg_sh', 'data'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839}'>
                  </assign>
                </begin>
              </if>
            </begin>
          </if>
        </caseitem>
        <caseitem loc='e,2190,20,2190,21' >
          <const loc='e,2190,5,2190,20' value='00000010' next_value='xxxxxxxx' cur_value='xxxxxxxx'flist='{}'>
          <assign loc='e,2192,15,2192,17' >
            <var name='picorv32_axi.picorv32_core.reg_op2' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
            <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
          </assign>
          <if loc='e,2193,6,2193,8' >
            <or loc='e,2193,27,2193,29' value='0' next_value='x' cur_value='x'flist='{}'>
              <not loc='e,2193,10,2193,11' value='0' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.mem_do_prefetch' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.mem_do_prefetch', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
              </not>
              <var name='picorv32_axi.picorv32_core.mem_done' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'data'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 0.0}'>
            </or>
            <begin >
              <if loc='e,2194,7,2194,9' >
                <not loc='e,2194,11,2194,12' value='x' next_value='x' cur_value='x'flist='{}'>
                  <var name='picorv32_axi.picorv32_core.mem_do_wdata' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_wdata', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                </not>
                <begin >
                  <case loc='e,2196,8,2196,12' >
                    <const loc='e,2196,14,2196,18' value='1' next_value='x' cur_value='x'flist='{}'>
                    <caseitem loc='e,2197,17,2197,18' >
                      <var name='picorv32_axi.picorv32_core.instr_sb' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_sb', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                      <assign loc='e,2197,32,2197,34' >
                        <const loc='e,2197,35,2197,36' value='10' next_value='xx' cur_value='xx'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.mem_wordsize' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.mem_wordsize', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                      </assign>
                    </caseitem>
                    <caseitem loc='e,2198,17,2198,18' >
                      <var name='picorv32_axi.picorv32_core.instr_sh' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_sh', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                      <assign loc='e,2198,32,2198,34' >
                        <const loc='e,2198,35,2198,36' value='01' next_value='xx' cur_value='xx'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.mem_wordsize' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.mem_wordsize', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                      </assign>
                    </caseitem>
                    <caseitem loc='e,2199,17,2199,18' >
                      <var name='picorv32_axi.picorv32_core.instr_sw' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_sw', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                      <assign loc='e,2199,32,2199,34' >
                        <const loc='e,2199,35,2199,36' value='00' next_value='xx' cur_value='xx'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.mem_wordsize' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.mem_wordsize', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                      </assign>
                    </caseitem>
                  </case>
                  <assign loc='e,2202,25,2202,27' >
                    <const loc='e,2202,28,2202,29' value='1' next_value='x' cur_value='x'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.trace_valid_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                  </assign>
                  <assign loc='e,2203,24,2203,26' >
                    <or loc='e,2203,71,2203,72' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <const loc='e,2203,59,2203,69' value='001000000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <or loc='e,2203,57,2203,58' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        <cond loc='e,2203,40,2203,41' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <var name='picorv32_axi.picorv32_core.irq_active' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.irq_active', 'stay'): 1.0}'>
                          <const loc='e,2203,42,2203,51' value='100000000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <const loc='e,2203,54,2203,55' value='000000000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        </cond>
                        <and loc='e,2203,98,2203,99' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <const loc='e,2203,100,2203,112' value='000011111111111111111111111111111111' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <add loc='e,2203,83,2203,84' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                            <extend loc='e,2203,75,2203,82' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                              <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                            </extend>
                            <extend loc='e,2203,85,2203,96' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                              <var name='picorv32_axi.picorv32_core.decoded_imm' value='00000000000000000000000000011111' next_value='00000000000000000000000000011111' cur_value='00000000000000000000000000011111'flist='{('picorv32_axi.picorv32_core.decoded_imm', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                            </extend>
                          </add>
                        </and>
                      </or>
                    </or>
                    <var name='picorv32_axi.picorv32_core.trace_data_reg' value='000100000000000000001100001000010000' next_value='000100000000000000001100001000010000' cur_value='000100000000000000001100001000010000'flist='{('picorv32_axi.picorv32_core.trace_data_reg', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                  </assign>
                  <assign loc='e,2205,16,2205,18' >
                    <add loc='e,2205,27,2205,28' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                      <var name='picorv32_axi.picorv32_core.decoded_imm' value='00000000000000000000000000011111' next_value='00000000000000000000000000011111' cur_value='00000000000000000000000000011111'flist='{('picorv32_axi.picorv32_core.decoded_imm', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                    </add>
                    <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                  </assign>
                </begin>
              </if>
            </begin>
          </if>
        </caseitem>
        <caseitem loc='e,2209,20,2209,21' >
          <const loc='e,2209,5,2209,20' value='00000001' next_value='xxxxxxxx' cur_value='xxxxxxxx'flist='{}'>
          <if loc='e,2210,6,2210,8' >
            <or loc='e,2210,27,2210,29' value='0' next_value='x' cur_value='x'flist='{}'>
              <not loc='e,2210,10,2210,11' value='0' next_value='x' cur_value='x'flist='{}'>
                <var name='picorv32_axi.picorv32_core.mem_do_prefetch' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.mem_do_prefetch', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
              </not>
              <var name='picorv32_axi.picorv32_core.mem_done' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'data'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 0.0}'>
            </or>
            <begin >
              <if loc='e,2211,7,2211,9' >
                <not loc='e,2211,11,2211,12' value='x' next_value='x' cur_value='x'flist='{}'>
                  <var name='picorv32_axi.picorv32_core.mem_do_rdata' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rdata', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                </not>
                <begin >
                  <case loc='e,2213,8,2213,12' >
                    <const loc='e,2213,14,2213,18' value='1' next_value='x' cur_value='x'flist='{}'>
                    <caseitem loc='e,2214,30,2214,31' >
                      <or loc='e,2214,18,2214,20' value='x' next_value='x' cur_value='x'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.instr_lb' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_lb', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.instr_lbu' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_lbu', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                      </or>
                      <assign loc='e,2214,45,2214,47' >
                        <const loc='e,2214,48,2214,49' value='10' next_value='xx' cur_value='xx'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.mem_wordsize' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.mem_wordsize', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                      </assign>
                    </caseitem>
                    <caseitem loc='e,2215,30,2215,31' >
                      <or loc='e,2215,18,2215,20' value='x' next_value='x' cur_value='x'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.instr_lh' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_lh', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.instr_lhu' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_lhu', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                      </or>
                      <assign loc='e,2215,45,2215,47' >
                        <const loc='e,2215,48,2215,49' value='01' next_value='xx' cur_value='xx'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.mem_wordsize' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.mem_wordsize', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                      </assign>
                    </caseitem>
                    <caseitem loc='e,2216,17,2216,18' >
                      <var name='picorv32_axi.picorv32_core.instr_lw' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.instr_lw', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                      <assign loc='e,2216,32,2216,34' >
                        <const loc='e,2216,35,2216,36' value='00' next_value='xx' cur_value='xx'flist='{}'>
                        <var name='picorv32_axi.picorv32_core.mem_wordsize' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.mem_wordsize', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                      </assign>
                    </caseitem>
                  </case>
                  <assign loc='e,2219,25,2219,27' >
                    <const loc='e,2219,28,2219,29' value='1' next_value='x' cur_value='x'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.trace_valid_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                  </assign>
                  <assign loc='e,2220,24,2220,26' >
                    <or loc='e,2220,71,2220,72' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <const loc='e,2220,59,2220,69' value='001000000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <or loc='e,2220,57,2220,58' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        <cond loc='e,2220,40,2220,41' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <var name='picorv32_axi.picorv32_core.irq_active' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.irq_active', 'stay'): 1.0}'>
                          <const loc='e,2220,42,2220,51' value='100000000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <const loc='e,2220,54,2220,55' value='000000000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                        </cond>
                        <and loc='e,2220,98,2220,99' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <const loc='e,2220,100,2220,112' value='000011111111111111111111111111111111' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <add loc='e,2220,83,2220,84' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                            <extend loc='e,2220,75,2220,82' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                              <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                            </extend>
                            <extend loc='e,2220,85,2220,96' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                              <var name='picorv32_axi.picorv32_core.decoded_imm' value='00000000000000000000000000011111' next_value='00000000000000000000000000011111' cur_value='00000000000000000000000000011111'flist='{('picorv32_axi.picorv32_core.decoded_imm', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                            </extend>
                          </add>
                        </and>
                      </or>
                    </or>
                    <var name='picorv32_axi.picorv32_core.trace_data_reg' value='000100000000000000001100001000010000' next_value='000100000000000000001100001000010000' cur_value='000100000000000000001100001000010000'flist='{('picorv32_axi.picorv32_core.trace_data_reg', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
                  </assign>
                  <assign loc='e,2222,16,2222,18' >
                    <add loc='e,2222,27,2222,28' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                      <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                      <var name='picorv32_axi.picorv32_core.decoded_imm' value='00000000000000000000000000011111' next_value='00000000000000000000000000011111' cur_value='00000000000000000000000000011111'flist='{('picorv32_axi.picorv32_core.decoded_imm', 'stay'): 1.0, ('picorv32_axi.picorv32_core.decoder_pseudo_trigger', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.decoder_trigger', 'ctrl'): 1.0}'>
                    </add>
                    <var name='picorv32_axi.picorv32_core.reg_op1' value='00000000000000000000000000000001' next_value='00000000000000000000000000000001' cur_value='00000000000000000000000000000010'flist='{('picorv32_axi.picorv32_core.reg_op1', 'data'): -0.96875, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.8709677419354839, ('picorv32_axi.picorv32_core.instr_sll', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_slli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srl', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.instr_srli', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_sra', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.instr_srai', 'ctrl'): 1.0}'>
                  </assign>
                </begin>
              </if>
              <if loc='e,2224,7,2224,9' >
                <and loc='e,2224,28,2224,30' value='x' next_value='x' cur_value='x'flist='{}'>
                  <not loc='e,2224,11,2224,12' value='x' next_value='x' cur_value='x'flist='{}'>
                    <var name='picorv32_axi.picorv32_core.mem_do_prefetch' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.mem_do_prefetch', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
                  </not>
                  <var name='picorv32_axi.picorv32_core.mem_done' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'data'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 0.0}'>
                </and>
                <begin >
                  <case loc='e,2226,8,2226,12' >
                    <const loc='e,2226,14,2226,18' value='1' next_value='x' cur_value='x'flist='{}'>
                    <caseitem loc='e,2227,22,2227,23' >
                      <var name='picorv32_axi.picorv32_core.latched_is_lu' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.latched_is_lu', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                      <assign loc='e,2227,32,2227,34' >
                        <var name='picorv32_axi.picorv32_core.mem_rdata_word' value='00000000000101101101011010010011' next_value='00000000000101101101011010010011' cur_value='00000000000101101101011010010011'flist='{('picorv32_axi.picorv32_core.mem_wordsize', 'data'): 1.0}'>
                        <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                      </assign>
                    </caseitem>
                    <caseitem loc='e,2228,22,2228,23' >
                      <var name='picorv32_axi.picorv32_core.latched_is_lh' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.latched_is_lh', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                      <assign loc='e,2228,32,2228,34' >
                        <extends loc='e,2228,35,2228,42' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <sel loc='e,2228,57,2228,58' value='xxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxx'flist='{}'>
                            <var name='picorv32_axi.picorv32_core.mem_rdata_word' value='00000000000101101101011010010011' next_value='00000000000101101101011010010011' cur_value='00000000000101101101011010010011'flist='{('picorv32_axi.picorv32_core.mem_wordsize', 'data'): 1.0}'>
                            <const loc='e,2228,61,2228,62' value='00000' next_value='xxxxx' cur_value='xxxxx'flist='{}'>
                            <const loc='e,2228,58,2228,60' value='00000000000000000000000000010000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          </sel>
                        </extends>
                        <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                      </assign>
                    </caseitem>
                    <caseitem loc='e,2229,22,2229,23' >
                      <var name='picorv32_axi.picorv32_core.latched_is_lb' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.latched_is_lb', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                      <assign loc='e,2229,32,2229,34' >
                        <extends loc='e,2229,35,2229,42' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          <sel loc='e,2229,57,2229,58' value='xxxxxxxx' next_value='xxxxxxxx' cur_value='xxxxxxxx'flist='{}'>
                            <var name='picorv32_axi.picorv32_core.mem_rdata_word' value='00000000000101101101011010010011' next_value='00000000000101101101011010010011' cur_value='00000000000101101101011010010011'flist='{('picorv32_axi.picorv32_core.mem_wordsize', 'data'): 1.0}'>
                            <const loc='e,2229,60,2229,61' value='00000' next_value='xxxxx' cur_value='xxxxx'flist='{}'>
                            <const loc='e,2229,58,2229,59' value='00000000000000000000000000001000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
                          </sel>
                        </extends>
                        <var name='picorv32_axi.picorv32_core.reg_out' value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
                      </assign>
                    </caseitem>
                  </case>
                </begin>
              </if>
            </begin>
          </if>
        </caseitem>
      </case>
    </begin>
    <begin >
      <assign loc='e,1977,11,1977,13' >
        <const loc='e,1977,14,1977,28' value='00000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
        <var name='picorv32_axi.picorv32_core.reg_pc' value='00000000000000001100001000010000' next_value='00000000000000001100001000010000' cur_value='00000000000000001100001000010000'flist='{('picorv32_axi.picorv32_core.reg_pc', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
      </assign>
      <assign loc='e,1978,16,1978,18' >
        <const loc='e,1978,19,1978,33' value='00000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
        <var name='picorv32_axi.picorv32_core.reg_next_pc' value='00000000000000001100001000010100' next_value='00000000000000001100001000010100' cur_value='00000000000000001100001000010100'flist='{('picorv32_axi.picorv32_core.reg_next_pc', 'stay'): 1.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2}'>
      </assign>
      <assign loc='e,1979,19,1979,21' >
        <const loc='e,1979,22,1979,23' value='0' next_value='x' cur_value='x'flist='{}'>
        <var name='picorv32_axi.picorv32_core.pcpi_valid_reg' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.pcpi_valid_reg', 'stay'): 1.0}'>
      </assign>
      <assign loc='e,1980,17,1980,19' >
        <const loc='e,1980,20,1980,21' value='0' next_value='x' cur_value='x'flist='{}'>
        <var name='picorv32_axi.picorv32_core.pcpi_timeout' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.pcpi_timeout_counter', 'data'): 0.0625}'>
      </assign>
      <assign loc='e,1981,15,1981,17' >
        <const loc='e,1981,18,1981,19' value='0' next_value='x' cur_value='x'flist='{}'>
        <var name='picorv32_axi.picorv32_core.irq_active' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.irq_active', 'stay'): 1.0}'>
      </assign>
      <assign loc='e,1982,14,1982,16' >
        <const loc='e,1982,17,1982,18' value='0' next_value='x' cur_value='x'flist='{}'>
        <var name='picorv32_axi.picorv32_core.irq_delay' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.irq_delay', 'stay'): 1.0}'>
      </assign>
      <assign loc='e,1983,13,1983,15' >
        <const loc='e,1983,16,1983,17' value='11111111111111111111111111111111' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
        <var name='picorv32_axi.picorv32_core.irq_mask' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.irq_mask', 'stay'): 1.0}'>
      </assign>
      <assign loc='e,1985,14,1985,16' >
        <const loc='e,1985,17,1985,18' value='00' next_value='xx' cur_value='xx'flist='{}'>
        <var name='picorv32_axi.picorv32_core.irq_state' value='00' next_value='00' cur_value='00'flist='{('picorv32_axi.picorv32_core.irq_state', 'stay'): 1.0}'>
      </assign>
      <assign loc='e,1986,12,1986,14' >
        <const loc='e,1986,15,1986,16' value='00000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
        <var name='picorv32_axi.picorv32_core.eoi_reg' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.eoi_reg', 'stay'): 1.0}'>
      </assign>
      <assign loc='e,1987,10,1987,12' >
        <const loc='e,1987,13,1987,14' value='00000000000000000000000000000000' next_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' cur_value='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'flist='{}'>
        <var name='picorv32_axi.picorv32_core.timer' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.timer', 'stay'): 1.0, ('picorv32_axi.picorv32_core.timer', 'ctrl'): 1.0}'>
      </assign>
    </begin>
  </if>
  <if loc='e,2235,3,2235,5' >
    <or loc='e,2235,15,2235,17' value='0' next_value='x' cur_value='x'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'data'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 0.0}'>
      <not loc='e,2235,7,2235,8' value='0' next_value='x' cur_value='x'flist='{}'>
        <var name='resetn' value='1' next_value='1' cur_value='1'flist='{}'>
      </not>
      <var name='picorv32_axi.picorv32_core.mem_done' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'data'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'data'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 0.0}'>
    </or>
    <begin >
      <assign loc='e,2236,20,2236,22' >
        <const loc='e,2236,23,2236,24' value='0' next_value='x' cur_value='x'flist='{}'>
        <var name='picorv32_axi.picorv32_core.mem_do_prefetch' value='1' next_value='1' cur_value='1'flist='{('picorv32_axi.picorv32_core.mem_do_prefetch', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
      </assign>
      <assign loc='e,2237,17,2237,19' >
        <const loc='e,2237,20,2237,21' value='0' next_value='x' cur_value='x'flist='{}'>
        <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
      </assign>
      <assign loc='e,2238,17,2238,19' >
        <const loc='e,2238,20,2238,21' value='0' next_value='x' cur_value='x'flist='{}'>
        <var name='picorv32_axi.picorv32_core.mem_do_rdata' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rdata', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
      </assign>
      <assign loc='e,2239,17,2239,19' >
        <const loc='e,2239,20,2239,21' value='0' next_value='x' cur_value='x'flist='{}'>
        <var name='picorv32_axi.picorv32_core.mem_do_wdata' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_wdata', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
      </assign>
    </begin>
  </if>
  <if loc='e,2241,3,2241,5' >
    <var name='picorv32_axi.picorv32_core.set_mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.cpu_state', 'data'): 1.0}'>
    <begin >
      <assign loc='e,2242,17,2242,19' >
        <const loc='e,2242,20,2242,21' value='1' next_value='x' cur_value='x'flist='{}'>
        <var name='picorv32_axi.picorv32_core.mem_do_rinst' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rinst', 'stay'): 1.0, ('picorv32_axi.picorv32_core.reg_sh', 'ctrl'): 0.2, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0}'>
      </assign>
    </begin>
  </if>
  <if loc='e,2243,3,2243,5' >
    <var name='picorv32_axi.picorv32_core.set_mem_do_rdata' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.cpu_state', 'data'): 1.0}'>
    <begin >
      <assign loc='e,2244,17,2244,19' >
        <const loc='e,2244,20,2244,21' value='1' next_value='x' cur_value='x'flist='{}'>
        <var name='picorv32_axi.picorv32_core.mem_do_rdata' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_rdata', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
      </assign>
    </begin>
  </if>
  <if loc='e,2245,3,2245,5' >
    <var name='picorv32_axi.picorv32_core.set_mem_do_wdata' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.cpu_state', 'data'): 1.0}'>
    <begin >
      <assign loc='e,2246,17,2246,19' >
        <const loc='e,2246,20,2246,21' value='1' next_value='x' cur_value='x'flist='{}'>
        <var name='picorv32_axi.picorv32_core.mem_do_wdata' value='0' next_value='0' cur_value='0'flist='{('picorv32_axi.picorv32_core.mem_do_wdata', 'stay'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'ctrl'): 1.0, ('picorv32_axi.picorv32_core.prefetched_high_word', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.irq_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_branch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.reg_next_pc', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.latched_store', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_la_secondword', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_prefetch', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_valid_reg', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_rdata_q', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_state', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'ctrl'): 0.0, ('picorv32_axi.picorv32_core.cpu_state', 'ctrl'): 1.0}'>
      </assign>
    </begin>
  </if>
  <assign loc='e,2247,15,2247,17' >
    <var name='picorv32_axi.picorv32_core.next_irq_pending' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.irq_pending', 'data'): 1.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 1.0, ('picorv32_axi.picorv32_core.reg_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 0.0}'>
    <var name='picorv32_axi.picorv32_core.irq_pending' value='00000000000000000000000000000000' next_value='00000000000000000000000000000000' cur_value='00000000000000000000000000000000'flist='{('picorv32_axi.picorv32_core.irq_pending', 'data'): 1.0, ('picorv32_axi.picorv32_core.mem_do_wdata', 'data'): 1.0, ('picorv32_axi.picorv32_core.mem_do_rdata', 'data'): 1.0, ('picorv32_axi.picorv32_core.reg_pc', 'data'): 0.0, ('picorv32_axi.picorv32_core.mem_do_rinst', 'data'): 0.0}'>
  </assign>
</always>
